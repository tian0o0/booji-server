version: '3.8'

services:
  mysqldb:
    image: mysql:latest
    container_name: booji-mysql
    command:
      --default-authentication-plugin=mysql_native_password
      --server-id=1
      --log-bin=mysql-bin
      --binlog-format=ROW
      --sync-binlog=1
      --log-slave-updates=ON
      --gtid-mode=ON
      --enforce-gtid-consistency=ON
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --read-only=OFF
      --binlog-rows-query-log-events=ON
    environment:
      MYSQL_ROOT_PASSWORD: 666666
      MYSQL_DATABASE: booji
    ports:
      - 3307:3306
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
    cap_add:
      - SYS_NICE
    networks:
      - shared-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: booji-zookeeper
    ports:
      - 2182:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared-network

  kafka:
    image: bitnami/kafka:3.2.0
    container_name: booji-kafka
    ports:
      - 9093:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - shared-network
  
  es:
    image: elasticsearch:7.17.1
    container_name: booji-es
    ports:
      - 9201:9200
    volumes:
      - elasticsearch-volume:/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    restart: unless-stopped
    networks:
      - shared-network
  
  kibana:
    image: kibana:7.17.1
    container_name: booji-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5602:5601
    depends_on:
      - es
    networks:
      - shared-network

  api:
    container_name: booji-api
    build: booji-api
    ports:
      - 3334:3333
    depends_on:
      - mysqldb
      - es
      - kafka
    restart: unless-stopped
    networks:
      - shared-network
    healthcheck:
      test: ["CMD", "curl", "http://api:3333/api/health"]
      interval: 10s
      timeout: 3s
      retries: 10
  
  admin:
    container_name: booji-admin
    build: booji-admin
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    networks:
      - shared-network
    # 如果需要开启https需要挂载证书文件,在当前目录添加证书文件夹
    # volumes:
    #   - ./booji.qingtian.life_nginx/booji.qingtian.life_bundle.crt:/etc/pki/booji.qingtian.life_nginx/booji.qingtian.life_bundle.crt
    #   - ./booji.qingtian.life_nginx/booji.qingtian.life.key:/etc/pki/booji.qingtian.life_nginx/booji.qingtian.life.key
  

  # bug太多，文档不全，接入困难，遂放弃该方案
  # canal-server:
  #   image: canal/canal-server:latest
  #   container_name: booji-canal-server
  #   ports:
  #     - 11112:11111
  #   environment:
  #     - canal.auto.scan=false
  #     - canal.instance.master.address=mysqldb:3306
  #     - canal.instance.dbUsername=root
  #     - canal.instance.dbPassword=666666
  #     - canal.instance.filter.regex=booji.issue
  #     - canal.instance.connectionCharset=UTF-8
  #     - canal.instance.tsdb.enable=true
  #     - canal.instance.gtidon=false
  #   volumes:
  #     - canal-example:/home/admin/canal-server/conf/example
  #     - canal-logs:/home/admin/canal-server/logs
  #   depends_on:
  #     - mysqldb
  #   networks:
  #     - shared-network
  # canal-adapter:
  #   image: slpcat/canal-adapter:v1.1.5
  #   container_name: booji-canal-adapter
  #   volumes:
  #     - ./canal-adapter/conf:/opt/canal-adapter/conf
  #     - ./canal-adapter/lib/client-adapter.launcher-1.1.6.jar:/opt/canal-adapter/lib/client-adapter.launcher-1.1.6.jar
  #     - ./canal-adapter/plugin/client-adapter.es7x-1.1.6-jar-with-dependencies.jar:/opt/canal-adapter/plugin/client-adapter.es7x-1.1.6-jar-with-dependencies.jar
  #   depends_on:
  #     - mysqldb
  #     - es
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "curl", "http://es:9200/_cat/health"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 50
  #   networks:
  #     - shared-network

networks:
  shared-network:
    driver: bridge

# required
volumes:
  db-config:
  db-data:
  elasticsearch-volume:
  canal-example:
  canal-logs:
  
