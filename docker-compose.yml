version: '3.8'

services:
  mysqldb:
    image: mysql
    container_name: booji-server-mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 666666
      MYSQL_DATABASE: booji
    ports:
      - 3306:3306
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql

  zookeeper:
    image: zookeeper:latest
    container_name: booji-server-zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.2.0
    container_name: booji-server-kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  
  es:
    image: elasticsearch:7.17.1
    container_name: booji-server-es
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-volume:/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    restart: unless-stopped
  
  kibana:
    image: kibana:7.17.1
    container_name: booji-server-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5601:5601
    depends_on:
      - es

  api:
    container_name: booji-server-api
    build: booji-api
    ports:
      - 3333:3333
    depends_on:
      - mysqldb
      - es
      - kafka
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://api:3333"]
      interval: 5s
      timeout: 3s
      retries: 6
  
  admin:
    container_name: booji-server-admin
    build: booji-admin
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    # 如果需要开启https需要挂载证书文件
    volumes:
      - /etc/pki/qingtian.life_nginx/qingtian.life_bundle.crt:/etc/pki/qingtian.life_nginx/qingtian.life_bundle.crt
      - /etc/pki/qingtian.life_nginx/qingtian.life.key:/etc/pki/qingtian.life_nginx/qingtian.life.key

# networks:
#   shared-network:
#     driver: bridge

# required?
volumes:
  db-config:
  db-data:
  elasticsearch-volume:
  
